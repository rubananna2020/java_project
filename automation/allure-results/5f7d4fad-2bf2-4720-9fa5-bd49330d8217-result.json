{"name":"Test02: Add Student record and verify it","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","description":"Test Description: Add new Student record and verify it","steps":[{"name":"Creat new Student record","status":"passed","stage":"finished","steps":[{"name":"Post Data to StudentsList Server","status":"passed","stage":"finished","steps":[],"attachments":[],"parameters":[{"name":"params","value":"{\"firstName\":\"Yoni\",\"lastName\":\"Cohen\",\"programme\":\"Computer Science\",\"email\":\"Yoni@walla.com\"}"},{"name":"resourse","value":"/student/"}],"start":1598340490834,"stop":1598340491239}],"attachments":[],"parameters":[{"name":"firstName","value":"Yoni"},{"name":"lastName","value":"Cohen"},{"name":"email","value":"Yoni@walla.com"},{"name":"programme","value":"Computer Science"}],"start":1598340490832,"stop":1598340491239},{"name":"Extract Student List","status":"passed","stage":"finished","steps":[{"name":"Get Data from StudentsList Server","status":"passed","stage":"finished","steps":[],"attachments":[],"parameters":[{"name":"paramValues","value":"/student/list"}],"start":1598340491240,"stop":1598340491321},{"name":"Extract Value from Json Format","status":"passed","stage":"finished","steps":[],"attachments":[],"parameters":[{"name":"response","value":"io.restassured.internal.RestAssuredResponseImpl@63f3366a"},{"name":"path","value":"firstName"}],"start":1598340491321,"stop":1598340491399}],"attachments":[],"parameters":[{"name":"jPath","value":"firstName"}],"start":1598340491239,"stop":1598340491399},{"name":"Verify Students Number","status":"passed","stage":"finished","steps":[],"attachments":[],"parameters":[{"name":"students","value":"[Vernon, Murphy, Reece, Orson, Cullen, Harper, Roth, Jermaine, Sebastian, Todd, Giacomo, Chadwick, Zachary, Denton, Hakeem, Jakeem, Amal, Reed, Lev, Lamar, Nathaniel, Kennan, Omar, Tanek, Paki, James, Cade, Quentin, Arden, Lars, Emmanuel, Noah, Mason, Elliott, Nero, Elvis, Kieran, Noah, Peter, Axel, Hashim, Alan, Abel, Cedric, Boris, Walter, Preston, Kane, Igor, Yoshio, Fletcher, Burton, Rafael, Dolan, Driscoll, Boris, Maxwell, Nero, Chase, Dominic, Ross, Abel, Nero, Thane, Jerome, Tate, Caldwell, Lucian, Akeem, Vance, Austin, Jackson, Lee, Aquila, Baker, Samuel, Byron, Declan, Robert, Troy, Tiger, Herrod, Yuli, Chancellor, Charles, Lucius, Richard, Addison, Acton, Channing, Darius, Walter, Dieter, Evan, Hamilton, Gavin, Brendan, Gary, Fletcher, Oscar, Yoni]"},{"name":"expctNum","value":"101"}],"start":1598340491400,"stop":1598340491418}],"attachments":[],"parameters":[{"name":"PlatformName","value":"api"}],"start":1598340490831,"stop":1598340491418,"uuid":"5f7d4fad-2bf2-4720-9fa5-bd49330d8217","historyId":"748d07ac0419f6ef97a1091945410aba","fullName":"SanityTests.studentListAPI.test02_addStudent","labels":[{"name":"package","value":"SanityTests.studentListAPI"},{"name":"testClass","value":"SanityTests.studentListAPI"},{"name":"testMethod","value":"test02_addStudent"},{"name":"parentSuite","value":"Suite"},{"name":"suite","value":"API Tests"},{"name":"subSuite","value":"SanityTests.studentListAPI"},{"name":"host","value":"LAPTOP-GJBLS7MV"},{"name":"thread","value":"12048@LAPTOP-GJBLS7MV.main(1)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"}],"links":[]}